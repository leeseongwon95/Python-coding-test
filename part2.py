# 자료형

# 자연수 13이 홀수인지 짝수인지 판별할 수 있는 방법 ?
1 % 2
2 % 2
3 % 2
4 % 2

# 주민등록번호 881120-1068234 주민등록 번호 연월일 부분과 그 뒤의 숫자 부분으로 나누어 출력

pin = "881120-1068234"
yymmdd = pin[:6]
num = pin[7:]
print(yymmdd)
print(num)

# 주민등록번호 뒷자리의 맨 첫 번째 숫자는 성별 주민등록번호에서 성별을 나타내는 숫자 출력

pin = "881120-1068234"
print(pin[7])

# 문자열 a:b:c:d -> a#b#c#d 로 출력

a = "a:b:c:d"
b = a.replace(":", "#")
print(b)

# [1,3,5,4,2] 라는 리스트를 [5,4,3,2,1] 로 출력

a = [1, 3, 5, 4, 2]
a.sort()
a.reverse()
print(a)

# ['Life', 'is', 'too', 'short'] 리스트를 Life is too short 라는 문자열로 출력

a = ['Life', 'is', 'too', 'short']
result = " ".join(a)
print(result)

# (1,2,3) 이라는 튜플에 4라는 값을 추가하여 (1,2,3,4) 처럼 만들어 출력

a = (1, 2, 3)
a = a + (4,)
print(a)

a = (1,2,3)
print(id(a))
a = a + (4,)
print(a)
print(id(a))

# 딕셔너리 a가 있는데 오류가 발생하는 경우는 ?

# a[[1]] = 'python'
# Traceback (most recent call last):
# File "<stdin>", line 1, in <module>
# TypeError: unhashable type: 'list'

# 오류가 발생하는 이유는 딕셔너리의 키로는 변하는(mutable) 값을 사용할 수 없기 때문. 위 예에서 키로 사용된 [1]은 리스트이므로 변하는 값
# 다른 예에서 키로 사용된 문자열, 튜플, 숫자는 변하지 않는 (immutable) 값이므로 딕셔너리의 키로 사용이 가능하다.

# 딕셔너리 a에서 B에 해당되는 값 추출

a = {'A':90, 'B':80, 'C':70}
re = a.pop('B')
print(a)
print(re)

# a 리스트에서 중복된 숫자들을 제거해 보자

a = [1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5]
aSet = set(a) # a 리스트를 집합자료형으로 변환
b = list(aSet) # 집합자료형을 리스트 자료형으로 다시 변환
print(b) # [1, 2, 3, 4, 5] 출력

# 리스트 자료형이 집합 자료형으로 변환되면서 중복된 값들은 사라지게 된다. 이와 같은 성질을 사용하면 리스트 내에 중복된 값으 쉽게 제거할 수 있다.



# 파이썬은 다음처럼 동일 값에 여러 개의 변수를 선언할 ㅅ ㅜ있다. 다음과 같이 a,b 변수를 선언 한 후 a 의 두 번째 요솟값을 변경하면 b 의 값은 어떻게 될까? 그리고 이런 결과가 나오는 이유에 대해서 설명해 보자.

# [1,4,3] 이 출력된다. a 와 b 변수는 모두 동일한 [1,2,3] 이라는 리스트 객체를 가리키고 있기 때문



