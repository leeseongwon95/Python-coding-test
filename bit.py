################################ 비트시프트 연산 ################################
 
# 비트의 위치를 이동시키는 연산
# 곱하기, 나누기보다 쉬프트 연산이 빠를 때 종종 사용됨
# << : 각 비트를 왼쪽으로 옮긴다 (*2)와 같음
# >> : 각 비트를 오른쪽으로 옮긴다 (/2) 와 같음
# python 에서는 실수 (float) 에 대한 비트 연산자는 허용되지 않고 오류가 발생한다. (본래 실수 값도 동일하게 컴퓨터 내부적으로 2진수 형태로 저장된다.)
# 1을 3번만큼 밀게되면 (1<<3), 1(2) -> 1000(2) 가 된다

# 10 = 1010(2)
# n << 1 = 10100(2), n >> 1 = 101(2)
n = 10

print(n<<1, n>>1)
# 10 , 20

################################################################################

################################ 논리연산자 ################################

# 기준: bool(True, False)

# 모두 True일 때만 True출력(a and b)
# 서로 다를 때에만 True 출력(a ^ b, XOR)
# 서로 같을때에만 True 출력(a == b, a == True and b == True)
# 모두 False일 때 True 출력(not(a or b), a == False and b == False)


a = 1
b = 0
# 1. AND(&)
print(bool(int(a)) and bool(int(b)))

# 2. XOR(^)
print(a ^ b)

# 3. ==
print(a == True and b == True)

# 4. not, or
print(a == False and b == False)





################################################################################